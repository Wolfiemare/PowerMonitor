# Initialize the list with a default status, assuming all plugs are initially off.
# The list index corresponds to the plug number minus 1 (e.g., index 0 corresponds to plug 1).
power_status_list = ['OFF', 'OFF', 'OFF', 'OFF', 'OFF']

def on_message(client, userdata, msg):
    # Your existing code for other message types...
    
    topic = msg.topic
    payload = msg.payload.decode('utf-8')

    topic_parts = topic.split('/')
    if len(topic_parts) == 3 and topic_parts[2] == 'POWER':
        # Assuming topic structure is 'house/RoomXPlug/POWER'
        plug_num_str = topic_parts[1].replace('Room', '').replace('Plug', '')
        if plug_num_str.isdigit():
            plug_num = int(plug_num_str)
            if 1 <= plug_num <= len(power_status_list):  # Validate plug number
                power_status = payload  # This should be "ON" or "OFF"
                power_status_list[plug_num - 1] = power_status  # Update the corresponding status in the list
                print(f"Updated power status list: {power_status_list}")
            else:
                print(f"Received power status for unknown plug number: {plug_num}")
